"use strict";

// Copyright (c) 2019 Maxim Egorushkin. MIT License. See the full licence in file LICENSE.

$(function() {
    const spsc_pattern = { pattern: {
        path: {
            d: 'M 0 0 L 10 10 M 9 -1 L 11 1 M -1 9 L 1 11',
            strokeWidth: 4
        },
        width: 10,
        height: 10,
        opacity: 1
    }};

    const settings = {
     "boost::lockfree::spsc_queue": [$.extend(true, {pattern: {color: '#8E44AD'}}, spsc_pattern),  0],
   "moodycamel::ReaderWriterQueue": [$.extend(true, {pattern: {color: '#BA4A00'}}, spsc_pattern),  1],
                "pthread_spinlock": ['#58D68D',  2],
                      "std::mutex": ['#239B56',  3],
                 "tbb::spin_mutex": ['#3498DB',  4],
   "tbb::concurrent_bounded_queue": ['#9ACCED',  5],
          "boost::lockfree::queue": ['#AA73C2',  6],
     "moodycamel::ConcurrentQueue": ['#BA4A00',  7],
     "xenium::michael_scott_queue": ['#73C6B6',  8],
         "xenium::ramalhete_queue": ['#45B39D',  9],
    "xenium::vyukov_bounded_queue": ['#16A085', 10],
                     "AtomicQueue": ['#FFFF00', 11],
                    "AtomicQueueB": ['#FFFF40', 12],
                    "AtomicQueue2": ['#FFFF80', 13],
                   "AtomicQueueB2": ['#FFFFBF', 14],
             "OptimistAtomicQueue": ['#FF0000', 15],
            "OptimistAtomicQueueB": ['#FF4040', 16],
            "OptimistAtomicQueue2": ['#FF8080', 17],
           "OptimistAtomicQueueB2": ['#FFBFBF', 18]
    };

    function scalability_to_series(results) {
        results.forEach(entry => {
            const s = settings[entry.name];
            entry.color = s[0];
            entry.index = s[1];
        });
        return results;
    }

    function latency_to_series(results) {
        const series = Array.from(Object.entries(results)).map(entry => {
            const name = entry[0];
            const value = entry[1];
            const s = settings[name];
            return {
                name: name,
                color: s[0],
                index: s[1],
                data: [{y: Math.round(value * 1e9), x: s[1]}]
            };
        });
        series.sort((a, b) => { return a.index - b.index; });
        series.forEach((element, index) => {
            element.index = index;
            element.data[0].x = index;
        });
        const categories = series.map(s => { return s.name; });
        return [series, categories];
    }

    function plot_scalability(div_id, series, title_suffix, max_lin, max_log) {
        const modes = [
            {type: 'linear', title: { text: 'throughput, msg/sec (linear scale)'}, max: max_lin, min: 0 },
            {type: 'logarithmic', title: { text: 'throughput, msg/sec (logarithmic scale)'}, max: max_log, min: 100e3},
        ];
        let mode = 0;

        const tooltips = []; // Build a tooltip once and then reuse it.
        const tooltip_formatter = function() {
            const threads = this.x;
            let tooltip = tooltips[threads];
            if(tooltip === undefined) {
                const data = new Array(this.points.length / 2);
                this.points.forEach(point => {
                    const index = point.series.options.index;
                    let a = data[index];
                    if(a === undefined) {
                        a = new Object;
                        data[index] = a;
                    }
                    if(point.point.options.y !== undefined) {
                        a.name = point.series.name;
                        a.color = point.series.color;
                        a.mean = Highcharts.numberFormat(point.point.options.y, 0);
                    }
                    else {
                        a.min = Highcharts.numberFormat(point.point.options.low, 0);
                        a.high = Highcharts.numberFormat(point.point.options.high, 0);
                    }
                });
                let html = `<span style="font-weight: bold; font-size: 1.2em;">${threads} producers, ${threads} consumers</span>`;
                html += '<table><tr><th>Name</th><th style="text-align: right">min</th><th style="text-align: right">average</th><th style="text-align: right">max</th></tr>';
                data.forEach(s => {
                    html += `<tr><td style="color: ${s.color}">${s.name}: </td><td style="text-align: right"><b>${s.min}</b></td><td style="text-align: right"><b>${s.mean}</b></td><td style="text-align: right"><b>${s.high}</b></td></tr>`; }
                );
                html += '</table>';
                tooltip = html;
                tooltips[threads] = tooltip;
            }
            return tooltip;
        }

        const chart = Highcharts.chart(div_id, {
            chart: {
                events: {
                    click: function() {
                        mode ^= 1;
                        chart.yAxis[0].update(modes[mode]);
                    }
                }
            },
            title: { text: 'Scalability on ' + title_suffix },
            subtitle: { text: "click on the chart background to switch between linear and logarithmic scales" },
            xAxis: {
                title: { text: 'number of producers, number of consumers' },
                tickInterval: 1
            },
            yAxis: modes[mode],
            tooltip: {
                followPointer: true,
                shared: true,
                useHTML: true,
                formatter: tooltip_formatter
            },
            series: series
        });
    }

    function plot_latency(div_id, series_categories, title_suffix) {
        const [series, categories] = series_categories;
        Highcharts.chart(div_id, {
            chart: { type: 'bar' },
            plotOptions: {
                series: { stacking: 'normal'},
                bar: { dataLabels: { enabled: true, align: 'left', inside: false } }
            },
            title: { text: 'Latency on ' + title_suffix },
            xAxis: { categories: categories },
            yAxis: { title: { text: 'latency, nanoseconds/round-trip' }, max: 800 },
            tooltip: { valueSuffix: ' nanoseconds' },
            series: series
        });
    }

    // TODO: load these from files.
    const scalability_9900KS = [{"name": "AtomicQueue", "type": "column", "data": [[1, 74231130], [2, 12011858], [3, 10354387], [4, 8192020], [5, 8058345], [6, 7709403], [7, 7552220], [8, 6885968]]}, {"name": "AtomicQueue2", "type": "column", "data": [[1, 23153888], [2, 11657086], [3, 9472512], [4, 8055508], [5, 7972636], [6, 7641924], [7, 7509325], [8, 6854003]]}, {"name": "AtomicQueueB", "type": "column", "data": [[1, 48968374], [2, 11654762], [3, 10580691], [4, 8038875], [5, 7706848], [6, 7432887], [7, 7300722], [8, 6685564]]}, {"name": "AtomicQueueB2", "type": "column", "data": [[1, 34684489], [2, 11264944], [3, 9585552], [4, 7885529], [5, 7600268], [6, 7348211], [7, 7294366], [8, 6682430]]}, {"name": "OptimistAtomicQueue", "type": "column", "data": [[1, 661556071], [2, 32437895], [3, 37008138], [4, 39332552], [5, 44454166], [6, 46326029], [7, 48061575], [8, 47828080]]}, {"name": "OptimistAtomicQueue2", "type": "column", "data": [[1, 230538256], [2, 24851671], [3, 30273240], [4, 33343018], [5, 38976054], [6, 44704047], [7, 46362844], [8, 46347786]]}, {"name": "OptimistAtomicQueueB", "type": "column", "data": [[1, 124305321], [2, 32144227], [3, 36563374], [4, 38647013], [5, 43165102], [6, 44976208], [7, 46076590], [8, 46213653]]}, {"name": "OptimistAtomicQueueB2", "type": "column", "data": [[1, 59246349], [2, 26058597], [3, 29794288], [4, 32858135], [5, 36955446], [6, 39860539], [7, 42359860], [8, 43950268]]}, {"name": "boost::lockfree::queue", "type": "column", "data": [[1, 7092878], [2, 7553075], [3, 7476500], [4, 6610597], [5, 6457372], [6, 6055700], [7, 5964947], [8, 5535251]]}, {"name": "boost::lockfree::spsc_queue", "type": "column", "data": [[1, 69086959]]}, {"name": "moodycamel::ConcurrentQueue", "type": "column", "data": [[1, 24985741], [2, 16261043], [3, 17046353], [4, 18228886], [5, 19245549], [6, 20186438], [7, 21038132], [8, 22382013]]}, {"name": "moodycamel::ReaderWriterQueue", "type": "column", "data": [[1, 256503633]]}, {"name": "pthread_spinlock", "type": "column", "data": [[1, 27413691], [2, 16382070], [3, 10189163], [4, 7773828], [5, 9009726], [6, 8527056], [7, 7685023], [8, 6917365]]}, {"name": "std::mutex", "type": "column", "data": [[1, 6838493], [2, 5749404], [3, 5685428], [4, 6086683], [5, 5986755], [6, 5918632], [7, 5826170], [8, 5704761]]}, {"name": "tbb::concurrent_bounded_queue", "type": "column", "data": [[1, 13187267], [2, 13521906], [3, 11630738], [4, 10303443], [5, 9704186], [6, 8863967], [7, 7958661], [8, 7136724]]}, {"name": "tbb::spin_mutex", "type": "column", "data": [[1, 36432718], [2, 19845873], [3, 9346899], [4, 4753237], [5, 5552236], [6, 4834876], [7, 4560981], [8, 4138009]]}, {"name": "xenium::michael_scott_queue", "type": "column", "data": [[1, 9493893], [2, 8488596], [3, 7404448], [4, 6329812], [5, 6487028], [6, 6666732], [7, 6410011], [8, 6072896]]}, {"name": "xenium::ramalhete_queue", "type": "column", "data": [[1, 31963600], [2, 23562698], [3, 28838631], [4, 33650956], [5, 34327553], [6, 36597565], [7, 38204151], [8, 39750343]]}, {"name": "xenium::vyukov_bounded_queue", "type": "column", "data": [[1, 104853037], [2, 25098906], [3, 15718588], [4, 12409949], [5, 11083680], [6, 10969926], [7, 9652587], [8, 8371133]]}, {"name": "AtomicQueue", "type": "errorbar", "data": [[1, 52660493, 286258811], [2, 11670323, 12511844], [3, 9791407, 10870735], [4, 8124141, 8262334], [5, 7882302, 8164594], [6, 7536832, 7993441], [7, 7011413, 8020563], [8, 6291117, 7515622]]}, {"name": "AtomicQueue2", "type": "errorbar", "data": [[1, 22787102, 61696929], [2, 11251529, 12267302], [3, 9250720, 10001213], [4, 7958528, 8157226], [5, 7784153, 8097440], [6, 7450035, 7952026], [7, 7005546, 7995642], [8, 6349759, 7441272]]}, {"name": "AtomicQueueB", "type": "errorbar", "data": [[1, 42613077, 228034973], [2, 11307287, 12122517], [3, 9978460, 11117123], [4, 7820303, 8149391], [5, 7393617, 7922868], [6, 7044646, 7623977], [7, 6771050, 7812016], [8, 6167485, 7214447]]}, {"name": "AtomicQueueB2", "type": "errorbar", "data": [[1, 31747483, 44550020], [2, 11004660, 11624801], [3, 9311302, 9898647], [4, 7583514, 8026821], [5, 7318917, 7806120], [6, 7004711, 7518179], [7, 6760542, 7775829], [8, 6203358, 7175857]]}, {"name": "OptimistAtomicQueue", "type": "errorbar", "data": [[1, 487380322, 829842979], [2, 31797501, 32761745], [3, 36537452, 37548890], [4, 39195547, 39453579], [5, 37390896, 48677211], [6, 41443858, 50559092], [7, 43825547, 53156863], [8, 46177415, 50602252]]}, {"name": "OptimistAtomicQueue2", "type": "errorbar", "data": [[1, 25703634, 682547965], [2, 21661800, 29516399], [3, 29291342, 33834235], [4, 32920458, 36241653], [5, 36830993, 43357072], [6, 39747081, 49741386], [7, 42479711, 51839802], [8, 43732450, 49877392]]}, {"name": "OptimistAtomicQueueB", "type": "errorbar", "data": [[1, 75661057, 738447042], [2, 31477141, 32474220], [3, 36019269, 37037279], [4, 38357209, 38905937], [5, 36246828, 47608460], [6, 39494986, 49368578], [7, 41252863, 51655899], [8, 43899112, 49215349]]}, {"name": "OptimistAtomicQueueB2", "type": "errorbar", "data": [[1, 31441458, 495211858], [2, 21826376, 29825513], [3, 28756903, 34057706], [4, 31084544, 33672715], [5, 33366524, 40347303], [6, 36837801, 42786274], [7, 39946444, 45751323], [8, 41740252, 46736438]]}, {"name": "boost::lockfree::queue", "type": "errorbar", "data": [[1, 6746684, 8277185], [2, 7312023, 7803259], [3, 7263517, 7648842], [4, 6359882, 7098293], [5, 6367348, 6773852], [6, 5927503, 6298061], [7, 5746691, 6154693], [8, 5331463, 5801836]]}, {"name": "boost::lockfree::spsc_queue", "type": "errorbar", "data": [[1, 64923339, 78317500]]}, {"name": "moodycamel::ConcurrentQueue", "type": "errorbar", "data": [[1, 20190901, 29453011], [2, 14337151, 52431952], [3, 15291705, 43648056], [4, 15736506, 45837232], [5, 16888207, 47841058], [6, 16998837, 63384866], [7, 17716036, 66347129], [8, 17924728, 64375322]]}, {"name": "moodycamel::ReaderWriterQueue", "type": "errorbar", "data": [[1, 43356419, 538733018]]}, {"name": "pthread_spinlock", "type": "errorbar", "data": [[1, 23507277, 29932694], [2, 14270085, 18312194], [3, 8211868, 12289865], [4, 6395961, 9383867], [5, 8442872, 10466994], [6, 8112952, 9328919], [7, 7189956, 8492547], [8, 6576974, 7596251]]}, {"name": "std::mutex", "type": "errorbar", "data": [[1, 5006882, 9199394], [2, 4687459, 6598427], [3, 4580302, 6900299], [4, 4941923, 7100935], [5, 5151696, 6739344], [6, 5521016, 6571707], [7, 5532592, 6378700], [8, 5438188, 6181434]]}, {"name": "tbb::concurrent_bounded_queue", "type": "errorbar", "data": [[1, 10925661, 14807665], [2, 12352037, 15166768], [3, 11099805, 12535211], [4, 9929811, 10656023], [5, 9349138, 10217187], [6, 8548656, 9516659], [7, 7358384, 8693321], [8, 6615544, 8013655]]}, {"name": "tbb::spin_mutex", "type": "errorbar", "data": [[1, 32588344, 41937261], [2, 17753221, 21806602], [3, 7201937, 11563566], [4, 2900531, 6495310], [5, 5103017, 5929302], [6, 4254932, 5441256], [7, 4223732, 4907625], [8, 3338874, 4286720]]}, {"name": "xenium::michael_scott_queue", "type": "errorbar", "data": [[1, 8417342, 10161353], [2, 8230532, 8706024], [3, 7071683, 7702336], [4, 6177715, 6500382], [5, 6227656, 6844074], [6, 6408222, 7118668], [7, 6220683, 6728490], [8, 5906991, 6324097]]}, {"name": "xenium::ramalhete_queue", "type": "errorbar", "data": [[1, 26889784, 33285933], [2, 22883173, 24719839], [3, 28121330, 29464259], [4, 33312793, 34047588], [5, 31808107, 38717573], [6, 33560480, 40481895], [7, 34734954, 42470849], [8, 35105293, 44944634]]}, {"name": "xenium::vyukov_bounded_queue", "type": "errorbar", "data": [[1, 60523731, 122827707], [2, 17367563, 29204433], [3, 14333973, 16468857], [4, 11678227, 12747022], [5, 10112556, 11532118], [6, 9709516, 12829017], [7, 9061926, 10421370], [8, 8187699, 8591244]]}];
    const scalability_xeon_gold_6132 = [{"name": "AtomicQueue", "type": "column", "data": [[1, 19906379], [2, 3360318], [3, 2540097], [4, 2148981], [5, 1907036], [6, 1657634], [7, 1488760], [8, 1134833], [9, 977761], [10, 870096], [11, 823108], [12, 779436], [13, 736088], [14, 724994]]}, {"name": "AtomicQueue2", "type": "column", "data": [[1, 16412454], [2, 3162516], [3, 2504880], [4, 2099349], [5, 1853758], [6, 1678433], [7, 1478971], [8, 1101851], [9, 965117], [10, 866857], [11, 817993], [12, 763732], [13, 748160], [14, 725785]]}, {"name": "AtomicQueueB", "type": "column", "data": [[1, 19375823], [2, 3464380], [3, 2628530], [4, 2213331], [5, 1882340], [6, 1614894], [7, 1450844], [8, 1114221], [9, 977453], [10, 886773], [11, 832694], [12, 768455], [13, 748617], [14, 729848]]}, {"name": "AtomicQueueB2", "type": "column", "data": [[1, 13510902], [2, 3195377], [3, 2415910], [4, 2081638], [5, 1799935], [6, 1638831], [7, 1487208], [8, 1064354], [9, 956477], [10, 875849], [11, 805542], [12, 749653], [13, 734710], [14, 724329]]}, {"name": "OptimistAtomicQueue", "type": "column", "data": [[1, 142840249], [2, 8426661], [3, 9576990], [4, 11236410], [5, 11682846], [6, 12110442], [7, 12422646], [8, 9630368], [9, 9356399], [10, 9562462], [11, 9194918], [12, 8842495], [13, 9013495], [14, 8722258]]}, {"name": "OptimistAtomicQueue2", "type": "column", "data": [[1, 80395549], [2, 7266311], [3, 8682223], [4, 10070797], [5, 11196465], [6, 11009422], [7, 12014891], [8, 9088774], [9, 8197963], [10, 7511406], [11, 7479323], [12, 8027759], [13, 7646874], [14, 7688659]]}, {"name": "OptimistAtomicQueueB", "type": "column", "data": [[1, 42535256], [2, 8178398], [3, 9313966], [4, 11182862], [5, 11071581], [6, 11678121], [7, 12928155], [8, 9534581], [9, 9214922], [10, 8648023], [11, 8786416], [12, 8611284], [13, 8587190], [14, 8640406]]}, {"name": "OptimistAtomicQueueB2", "type": "column", "data": [[1, 24970228], [2, 6771915], [3, 7869179], [4, 8596036], [5, 9025476], [6, 9947855], [7, 11175934], [8, 8444257], [9, 7636355], [10, 7555424], [11, 6971695], [12, 6896952], [13, 6939233], [14, 7265695]]}, {"name": "boost::lockfree::queue", "type": "column", "data": [[1, 2940436], [2, 2119338], [3, 1892052], [4, 1775969], [5, 1570741], [6, 1519243], [7, 1338131], [8, 871582], [9, 771159], [10, 701558], [11, 657010], [12, 632636], [13, 611133], [14, 615575]]}, {"name": "boost::lockfree::spsc_queue", "type": "column", "data": [[1, 41346397]]}, {"name": "moodycamel::ConcurrentQueue", "type": "column", "data": [[1, 5813770], [2, 5178371], [3, 5350952], [4, 4826309], [5, 4391103], [6, 4147222], [7, 4022093], [8, 3022261], [9, 2747042], [10, 2689604], [11, 2694174], [12, 2710387], [13, 2711990], [14, 2729973]]}, {"name": "moodycamel::ReaderWriterQueue", "type": "column", "data": [[1, 88599399]]}, {"name": "pthread_spinlock", "type": "column", "data": [[1, 4439611], [2, 3776555], [3, 2884909], [4, 2277435], [5, 1954117], [6, 1736291], [7, 1582550], [8, 945248], [9, 816584], [10, 786282], [11, 741795], [12, 723166], [13, 700662], [14, 654262]]}, {"name": "std::mutex", "type": "column", "data": [[1, 4374733], [2, 3653203], [3, 2746821], [4, 3546002], [5, 3764444], [6, 4406667], [7, 4661679], [8, 2834932], [9, 2283783], [10, 2052604], [11, 1924905], [12, 1843371], [13, 1805665], [14, 1782993]]}, {"name": "tbb::concurrent_bounded_queue", "type": "column", "data": [[1, 4399672], [2, 4074068], [3, 3207061], [4, 2726400], [5, 2485667], [6, 2241260], [7, 2050229], [8, 1354501], [9, 1179242], [10, 1049317], [11, 962086], [12, 889811], [13, 857142], [14, 845956]]}, {"name": "tbb::spin_mutex", "type": "column", "data": [[1, 15748513], [2, 7790905], [3, 4938813], [4, 3437758], [5, 2575038], [6, 1988397], [7, 1503468], [8, 850061], [9, 557038], [10, 446868], [11, 385310], [12, 306211], [13, 263702], [14, 258920]]}, {"name": "xenium::michael_scott_queue", "type": "column", "data": [[1, 2716724], [2, 2010768], [3, 1906343], [4, 1658628], [5, 1500052], [6, 1371331], [7, 1265784], [8, 912181], [9, 809927], [10, 721215], [11, 677993], [12, 623058], [13, 592709], [14, 585922]]}, {"name": "xenium::ramalhete_queue", "type": "column", "data": [[1, 11579695], [2, 7132928], [3, 8607021], [4, 8799231], [5, 9490454], [6, 9656796], [7, 10053530], [8, 7554325], [9, 7213120], [10, 7245813], [11, 7278604], [12, 7271589], [13, 7538886], [14, 8141592]]}, {"name": "xenium::vyukov_bounded_queue", "type": "column", "data": [[1, 19186857], [2, 5596529], [3, 4017914], [4, 3232083], [5, 2771849], [6, 2540167], [7, 2343484], [8, 1563388], [9, 1317409], [10, 1210223], [11, 1114768], [12, 1030557], [13, 951942], [14, 943217]]}, {"name": "AtomicQueue", "type": "errorbar", "data": [[1, 8423380, 75007288], [2, 2668547, 4474761], [3, 2213857, 2826175], [4, 1969378, 2667587], [5, 1710611, 2243034], [6, 1511705, 1816774], [7, 1349823, 1704493], [8, 771318, 1630016], [9, 694941, 1332448], [10, 627084, 1287763], [11, 625386, 1166111], [12, 611172, 985777], [13, 638498, 859603], [14, 631211, 840129]]}, {"name": "AtomicQueue2", "type": "errorbar", "data": [[1, 7574804, 116175364], [2, 2716345, 3936342], [3, 2055283, 3273775], [4, 1850739, 2367572], [5, 1719422, 2100631], [6, 1542568, 1991956], [7, 1390594, 1696118], [8, 772816, 1600652], [9, 663266, 1441054], [10, 633548, 1194971], [11, 602813, 1081205], [12, 617185, 949060], [13, 618591, 906784], [14, 606155, 842841]]}, {"name": "AtomicQueueB", "type": "errorbar", "data": [[1, 10681081, 42890981], [2, 2758370, 4444432], [3, 2167975, 3307817], [4, 1908333, 2817211], [5, 1709385, 2310534], [6, 1523837, 1870737], [7, 1327759, 1646044], [8, 755567, 1593628], [9, 695332, 1363719], [10, 652953, 1189415], [11, 621832, 1134380], [12, 631055, 951347], [13, 608485, 852216], [14, 619866, 871398]]}, {"name": "AtomicQueueB2", "type": "errorbar", "data": [[1, 11423468, 15660745], [2, 2682589, 4188885], [3, 2135747, 2838129], [4, 1824161, 2672051], [5, 1678994, 1915134], [6, 1481011, 1992582], [7, 1320705, 1713176], [8, 741151, 1522761], [9, 667807, 1377958], [10, 600814, 1296886], [11, 620378, 1095631], [12, 596559, 974431], [13, 637360, 840500], [14, 623534, 840450]]}, {"name": "OptimistAtomicQueue", "type": "errorbar", "data": [[1, 54031776, 458926760], [2, 6536796, 11706458], [3, 7946795, 12610934], [4, 7730951, 13699863], [5, 8832894, 13876675], [6, 8251021, 14098901], [7, 8283000, 14323585], [8, 6539793, 11169957], [9, 7400818, 10578720], [10, 7547687, 10815681], [11, 6497930, 10946435], [12, 5201788, 11563879], [13, 5655788, 11059367], [14, 5494292, 11068106]]}, {"name": "OptimistAtomicQueue2", "type": "errorbar", "data": [[1, 35354221, 210690330], [2, 5616414, 10820275], [3, 6758683, 12348375], [4, 7368766, 13093504], [5, 7279858, 13340386], [6, 7630846, 13447185], [7, 8187382, 13840940], [8, 7205396, 10513152], [9, 6344455, 9776876], [10, 5963957, 10131741], [11, 5255733, 10499895], [12, 5118115, 10568309], [13, 5045208, 9559487], [14, 5315494, 10247109]]}, {"name": "OptimistAtomicQueueB", "type": "errorbar", "data": [[1, 20173975, 145930126], [2, 6764117, 12105829], [3, 7713744, 12534095], [4, 8114952, 13490426], [5, 7738651, 13814236], [6, 8081996, 14056838], [7, 9643987, 14103700], [8, 6315901, 11437920], [9, 6727346, 11743421], [10, 5459499, 10492260], [11, 5468292, 10882560], [12, 5214830, 11211295], [13, 5097478, 11045837], [14, 5497354, 11104844]]}, {"name": "OptimistAtomicQueueB2", "type": "errorbar", "data": [[1, 14905128, 32033846], [2, 4927362, 9638191], [3, 6234762, 11391568], [4, 6733759, 12389234], [5, 6810218, 12823702], [6, 6888548, 13070824], [7, 7585016, 13254285], [8, 5914490, 10403740], [9, 4888193, 10506853], [10, 4695733, 10368800], [11, 4621742, 9428322], [12, 4768588, 9506333], [13, 4820218, 9839812], [14, 4977388, 9888975]]}, {"name": "boost::lockfree::queue", "type": "errorbar", "data": [[1, 2063894, 3180589], [2, 1745317, 2547839], [3, 1600291, 2304813], [4, 1558651, 2069635], [5, 1304376, 1989735], [6, 1208605, 1968362], [7, 1107937, 1636444], [8, 615347, 1149252], [9, 539628, 1061971], [10, 512212, 1006580], [11, 498567, 867831], [12, 498725, 763978], [13, 497246, 717886], [14, 487632, 714743]]}, {"name": "boost::lockfree::spsc_queue", "type": "errorbar", "data": [[1, 21536794, 170769132]]}, {"name": "moodycamel::ConcurrentQueue", "type": "errorbar", "data": [[1, 3616268, 10887429], [2, 3688210, 6089367], [3, 4245656, 6174754], [4, 3855999, 5721150], [5, 3514722, 5331997], [6, 3181703, 5015525], [7, 3330470, 4739839], [8, 2604105, 3708956], [9, 2226646, 3235693], [10, 2382540, 3047758], [11, 2390331, 2943974], [12, 2394339, 3065444], [13, 2318878, 3218176], [14, 2276093, 3353098]]}, {"name": "moodycamel::ReaderWriterQueue", "type": "errorbar", "data": [[1, 19214481, 165791373]]}, {"name": "pthread_spinlock", "type": "errorbar", "data": [[1, 3823998, 6262668], [2, 2562380, 4438270], [3, 2356408, 3263382], [4, 1919781, 2741676], [5, 1635290, 2281141], [6, 1630186, 2118305], [7, 1369942, 1753603], [8, 763748, 1140600], [9, 455079, 979538], [10, 689880, 904125], [11, 682694, 862115], [12, 628031, 824122], [13, 607108, 808333], [14, 520281, 742869]]}, {"name": "std::mutex", "type": "errorbar", "data": [[1, 670612, 6239911], [2, 2849248, 4409320], [3, 2607340, 3131619], [4, 3290868, 3732458], [5, 3370540, 3944050], [6, 3849663, 4865090], [7, 4516609, 4817517], [8, 2629526, 3029023], [9, 2019685, 2494417], [10, 1797112, 2248690], [11, 1755015, 2079053], [12, 1702374, 2021206], [13, 1709891, 2019624], [14, 1652161, 2012028]]}, {"name": "tbb::concurrent_bounded_queue", "type": "errorbar", "data": [[1, 2739827, 6813690], [2, 3166313, 5253662], [3, 2844696, 3982438], [4, 2426331, 3269835], [5, 2171923, 2809787], [6, 1962426, 2515558], [7, 1823878, 2354353], [8, 930124, 1842865], [9, 777681, 1753585], [10, 665040, 1407433], [11, 709957, 1340163], [12, 677472, 1115880], [13, 671214, 1062603], [14, 717701, 964657]]}, {"name": "tbb::spin_mutex", "type": "errorbar", "data": [[1, 7300402, 21896350], [2, 5363290, 12289134], [3, 3768148, 5561785], [4, 2443817, 4251344], [5, 1785016, 3992057], [6, 1298008, 2908495], [7, 1048278, 2314823], [8, 579687, 1135861], [9, 408860, 803500], [10, 320736, 548807], [11, 283046, 558065], [12, 157787, 447993], [13, 135435, 365035], [14, 135172, 372595]]}, {"name": "xenium::michael_scott_queue", "type": "errorbar", "data": [[1, 1607145, 4348585], [2, 1467009, 2801508], [3, 1672285, 2243350], [4, 1472061, 1948754], [5, 1314091, 1688837], [6, 1158656, 1646305], [7, 1154502, 1489044], [8, 697124, 1269747], [9, 644838, 1051668], [10, 602456, 901028], [11, 564777, 875082], [12, 558550, 716284], [13, 541567, 652457], [14, 497865, 656109]]}, {"name": "xenium::ramalhete_queue", "type": "errorbar", "data": [[1, 6239405, 15907512], [2, 5551391, 9834130], [3, 6707381, 11436032], [4, 6898605, 11298981], [5, 7465449, 11587121], [6, 7422993, 11508362], [7, 7406868, 11875851], [8, 6374912, 8625635], [9, 6538418, 8212694], [10, 6810757, 8154679], [11, 6599580, 7936289], [12, 6430447, 8866873], [13, 6134153, 8545991], [14, 6844222, 9573085]]}, {"name": "xenium::vyukov_bounded_queue", "type": "errorbar", "data": [[1, 7126322, 21778808], [2, 3654835, 7204578], [3, 3199563, 4971188], [4, 2872625, 4092418], [5, 2485860, 3173930], [6, 2267235, 3066766], [7, 2126694, 2732360], [8, 1062350, 2133157], [9, 983161, 2032751], [10, 928429, 1777709], [11, 845481, 1529543], [12, 825446, 1323655], [13, 758841, 1143511], [14, 735619, 1172102]]}];
    const latency_9900KS = {"AtomicQueue":0.000000157,"AtomicQueue2":0.000000173,"AtomicQueueB":0.000000171,"AtomicQueueB2":0.000000175,"OptimistAtomicQueue":0.000000148,"OptimistAtomicQueue2":0.000000167,"OptimistAtomicQueueB":0.00000014,"OptimistAtomicQueueB2":0.000000149,"boost::lockfree::queue":0.00000031,"boost::lockfree::spsc_queue":0.000000129,"moodycamel::ConcurrentQueue":0.000000208,"moodycamel::ReaderWriterQueue":0.00000011,"pthread_spinlock":0.000000226,"std::mutex":0.000000411,"tbb::concurrent_bounded_queue":0.000000268,"tbb::spin_mutex":0.000000246,"xenium::michael_scott_queue":0.000000357,"xenium::ramalhete_queue":0.000000255,"xenium::vyukov_bounded_queue":0.000000183};
    const latency_xeon_gold_6132 = {"AtomicQueue":0.000000233,"AtomicQueue2":0.000000309,"AtomicQueueB":0.000000333,"AtomicQueueB2":0.000000387,"OptimistAtomicQueue":0.000000284,"OptimistAtomicQueue2":0.000000326,"OptimistAtomicQueueB":0.000000324,"OptimistAtomicQueueB2":0.00000035,"boost::lockfree::queue":0.000000695,"boost::lockfree::spsc_queue":0.000000256,"moodycamel::ConcurrentQueue":0.000000393,"moodycamel::ReaderWriterQueue":0.00000022,"pthread_spinlock":0.000000649,"tbb::concurrent_bounded_queue":0.000000593,"tbb::spin_mutex":0.000000515,"std::mutex":0.000001867,"xenium::michael_scott_queue":0.000000752,"xenium::ramalhete_queue":0.000000501,"xenium::vyukov_bounded_queue":0.000000427};
    plot_scalability('scalability-9900KS-5GHz', scalability_to_series(scalability_9900KS), "Intel i9-9900KS (core 5GHz / uncore 4.7GHz)", 65e6, 1000e6);
    plot_scalability('scalability-xeon-gold-6132', scalability_to_series(scalability_xeon_gold_6132), "Intel Xeon Gold 6132 (stock)", 15e6, 300e6);
    plot_latency('latency-9900KS-5GHz', latency_to_series(latency_9900KS), "Intel i9-9900KS (core 5GHz / uncore 4.7GHz)");
    plot_latency('latency-xeon-gold-6132', latency_to_series(latency_xeon_gold_6132), "Intel Xeon Gold 6132 (stock)");
});
